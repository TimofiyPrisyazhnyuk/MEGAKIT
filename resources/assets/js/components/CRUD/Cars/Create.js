import React, {Component} from 'react';import axios from "axios";export default class Create extends Component {    constructor() {        super();        this.handleInputChange = this.handleInputChange.bind(this);        this.onSubmit = this.onSubmit.bind(this);        this.state = {            make: '',            model: '',            user_id: '',            errors: {},            users: [],        };    }    componentDidMount() {        axios.post('http://megakit/api/cars/get/users')            .then(response => {                this.setState({                    users: response.data                });            }).catch(error => {            console.log(error);        });    }    /**     * add information about new car to state     *     * @param event     */    handleInputChange(event) {        const target = event.target;        this.setState({            [target.name]: target.value        });    }    /**     *  Submit new user to back-end and receive result     *     * @param event     */    onSubmit(event) {        event.preventDefault();        this.setState({errors: {}});        axios.post('http://megakit/api/cars', this.state)            .then(response => {                if (response.data.success) {                    this.props.history.push("/cars", response.data.success);                }                // console.log(response.data.warning);            }).catch(error => {            this.setState({                errors: error.response.data.errors            });        })    }    render() {        return (            <div className="row justify-content-center">                <div className="col-md-6 col-sm-8">                    <form onSubmit={this.onSubmit}>                        <div className="form-group">                            <label htmlFor="makeCar">Make Car</label>                            <input type="make" name="make" className={(this.state.errors.make) ?                                "form-control is-invalid" : 'form-control'} id="makeCar"                                   onChange={this.handleInputChange} required                                   value={this.state.make} placeholder="Volkswagen"/>                            <div className="text-danger">{(this.state.errors.make) ?                                this.state.errors.make.filter((make) => make) : ''}</div>                        </div>                        <div className="form-group">                            <label htmlFor="modelCar">Model Car</label>                            <input type="model" name="model" className={(this.state.errors.model) ?                                "form-control is-invalid" : 'form-control'} id="modelCar"                                   onChange={this.handleInputChange} required                                   placeholder="Passat" value={this.state.model}/>                            <div className="text-danger">{(this.state.errors.model) ?                                this.state.errors.model.filter((model) => model) : ''}</div>                        </div>                        <div className="form-group">                            <label htmlFor="userCar">User / Owner</label>                            <select name="user_id" className={(this.state.errors.user_id) ?                                "form-control is-invalid" : 'form-control'} id="userCar"                                    onChange={this.handleInputChange} required>                                {this.state.users.map((user => {                                    return <option key={user.id} value={user.id}>{user.name}</option>                                }))}                            </select>                            <div className="text-danger">{(this.state.errors.user_id) ?                                this.state.errors.user_id.filter((user_id) => user_id) : ''}</div>                        </div>                        <button type="submit" className="btn btn-outline-dark float-right">                            Create new Car <i className="fas fa-car-side"/>                        </button>                    </form>                </div>            </div>        );    }}